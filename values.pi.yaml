# for `local` environment

services: 
  - name: fe-nginx
    # replicaCount: 1
    autoscaling:
      enabled: true
      # minReplicas: 1
      # maxReplicas: 1
      # targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 70
    revisionHistoryLimit: 3
    image:
      #repository: jnuho/fe-nginx-arm64
      repository: jnuho/fe-nginx
      # Overrides the image tag whose default is the chart appVersion.
      #tag: ""
      tag: "latest"
      # pullPolicy: IfNotPresent
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 8080
      #targetPort: web
      targetPort: 80
    containerPort: 80
    #resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 100m
    livenessProbe:
      httpGet:
        path: /
        port: http
    readinessProbe:
      httpGet:
        path: /
        port: http
    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""
    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Automatically mount a ServiceAccount's API credentials?
      automount: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""
    podAnnotations: {}
    podLabels: {}
    podSecurityContext: {}
      # fsGroup: 2000
    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    # Additional volumes on the output Deployment definition.
    volumes:
      - name: config-volume
        configMap:
          name: application-settings
      # - name: foo
      #   secret:
      #     secretName: mysecret
      #     optional: false
    # Additional volumeMounts on the output Deployment definition.
    volumeMounts:
      - name: config-volume
        mountPath: /config
      # - name: foo
      #   mountPath: "/etc/foo"
      #   readOnly: true
    nodeSelector: {}
    tolerations: []
    affinity: {}

  - name: be-go
    replicaCount: 1
    # autoscaling:
    #   enabled: false
    revisionHistoryLimit: 3
    image:
      repository: jnuho/be-go
      tag: "latest"
      # pullPolicy: IfNotPresent
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 3001
      #targetPort: web
      targetPort: 3001
    containerPort: 3001

  - name: be-py
    replicaCount: 1
    # autoscaling:
    #   enabled: false
    revisionHistoryLimit: 3
    image:
      repository: jnuho/be-py
      tag: "latest"
      # pullPolicy: IfNotPresent
      pullPolicy: Always
    service:
      type: ClusterIP
      port: 3002
      #targetPort: web
      targetPort: 3002
    containerPort: 3002


autoscaling:
  name: fe-nginx-hpa
  enabled: true
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 70


ingress:
  enabled: true
  name: fe-nginx-ingress
  className: "nginx"
  # annotations: {}
  hosts:
    - host: localhost
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: fe-nginx-service
              port:
                number: 8080
        - path: /web/cat
          pathType: Prefix
          backend:
            service:
              name: be-go-service
              port:
                number: 3001
        - path: /weather
          pathType: Prefix
          backend:
            service:
              name: be-go-service
              port:
                number: 3001
        - path: /healthz
          pathType: Prefix
          backend:
            service:
              name: be-go-service
              port:
                number: 3001
        # - path: /mongo-express
        #   pathType: Prefix
        #   backend:
        #     service:
        #       name: mongo-express-service
        #       port:
        #         number: 8081

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


config:
  backend_go_url: http://localhost:8080
